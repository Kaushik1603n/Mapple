<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Add Product</title>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/css/bootstrap.min.css" rel="stylesheet"
        integrity="sha384-QWTKZyjpPEjISv5WaRU9OFeRpok6YctnYmDr5pNlyT2bRjXh0JMhjY6hW+ALEwIH" crossorigin="anonymous">
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/cropperjs/1.5.12/cropper.min.css">
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.11.3/font/bootstrap-icons.min.css">
    <link rel="stylesheet" href="/stylesheet/addProduct.css">
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/sweetalert2@11/dist/sweetalert2.min.css">


</head>

<body>
    <div id="alertBox">
    </div>
    <div class="d-flex flex-column flex-lg-row">
        <%- include("../../views/partials/admin/sidebar") %>
            <div class="container-fluid  p-4">

                <h2 class="mb-4">Update Coupon</h2>
                <% if(coupon) { %>
                    <form id="couponForm" class="rounded shadow-lg needs-validation">
                        <div class="mb-3">
                            <label for="couponName" class="form-label">Name</label>
                            <input type="text" class="form-control" id="couponName" value="<%= coupon.name %>"
                                placeholder="Enter coupon name" readonly>
                            <div class="invalid-feedback">Please enter a coupon name.</div>
                        </div>
                        <div class="mb-3">
                            <label for="couponCode" class="form-label">Coupon Code</label>
                            <input type="text" class="form-control" id="couponCode" value="<%= coupon.couponCode %>"
                                placeholder="Enter coupon code" readonly>
                            <div class="invalid-feedback">Please enter a valid coupon code.</div>
                        </div>
                        <div class="mb-3">
                            <label for="description" class="form-label">Description</label>
                            <textarea class="form-control" id="description" rows="3" value="<%= coupon.discription %>"
                                placeholder="Enter description"><%= coupon.discription %></textarea>
                            <div class="invalid-feedback">Please enter a description.</div>
                        </div>
                        <div class="input-row px-2">
                            <div class="col-md-6 mb-3">
                                <label for="discount" class="form-label">Discount (percentage)</label>
                                <input type="number" class="form-control" id="discount" value="<%= coupon.discount %>"
                                    placeholder="Enter discount percentage" min="1" max="100">
                                <div class="invalid-feedback">Please enter a discount percentage between 1 and 100.
                                </div>
                            </div>
                            <div class="col-md-6 mb-3">
                                <label for="status" class="form-label">Status</label>
                                <select class="form-control" id="status" name="status">
                                    <option value="true" <%=coupon.isList===true ? "selected" : "" %>>True</option>
                                    <option value="false" <%=coupon.isList===false ? "selected" : "" %>>False</option>
                                </select>
                                <div class="invalid-feedback">Please select a status.</div>
                            </div>

                        </div>
                        <div class="input-row px-2">
                            <div class="col-md-6 mb-3">
                                <label for="max" class="form-label">Max</label>
                                <input type="number" class="form-control" id="max" value="<%= coupon.maxDiscount %>"
                                    placeholder="Enter max value" min="1">
                                <div class="invalid-feedback">Please enter a maximum value greater than 0.</div>
                            </div>
                            <div class="col-md-6 mb-3">
                                <label for="min" class="form-label">Min</label>
                                <input type="number" class="form-control" id="min" value="<%= coupon.mininumParchase %>"
                                    placeholder="Enter min value" min="1">
                                <div class="invalid-feedback">Please enter a minimum value greater than 0.</div>
                            </div>
                        </div>
                        <div class="input-row px-2">
                            <div class="col-md-6 mb-3">
                                <label for="startDate" class="form-label">Start Date</label>
                                <input type="date" class="form-control" value="<%= coupon.startDate %>" id="startDate">
                                <div class="invalid-feedback">Please select a start date.</div>
                            </div>
                            <div class="col-md-6 mb-3">
                                <label for="endDate" class="form-label">End Date</label>
                                <input type="date" class="form-control" id="endDate" value="<%= coupon.endDate %>">
                                <div class="invalid-feedback">Please select an end date.</div>
                            </div>
                        </div>
                        <div class="d-flex justify-content-end">
                            <button type="button" class="btn btn-danger me-2">Cancel</button>
                            <button type="submit" class="btn btn-dark">Save Coupon</button>
                        </div>
                    </form>
                    <% } %>

            </div>
    </div>

    <script src="/js/admin/updateCoupon.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/js/bootstrap.bundle.min.js"
        integrity="sha384-YvpcrYf0tY3lHB60NNkmXc5s9fDVZLESaAA55NDzOxhy9GkcIdslK1eN7N6jIeHz"
        crossorigin="anonymous"></script>
        <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
<!-- 
    <script>
        document.addEventListener("DOMContentLoaded", function () {
            const form = document.getElementById("couponForm");

            form.addEventListener("submit", function (event) {
                // Prevent form submission for validation
                let isValid = true;

                // Validate Name
                const couponName = document.getElementById("couponName");
                if (couponName.value.trim() === "") {
                    setError(couponName, "Name is required.");
                    isValid = false;
                } else {
                    clearError(couponName);
                }

                // Validate Coupon Code
                const couponCode = document.getElementById("couponCode");
                if (couponCode.value.trim() === "") {
                    setError(couponCode, "Coupon code is required.");
                    isValid = false;
                } else {
                    clearError(couponCode);
                }

                // Validate Description
                const description = document.getElementById("description");
                if (description.value.trim() === "") {
                    setError(description, "Description is required.");
                    isValid = false;
                } else {
                    clearError(description);
                }

                // Validate Discount
                const discount = document.getElementById("discount");
                if (discount.value === "" || discount.value < 1 || discount.value > 100) {
                    setError(discount, "Enter a discount percentage between 1 and 100.");
                    isValid = false;
                } else {
                    clearError(discount);
                }

                // Validate State
                // const state = document.getElementById("state");
                // if (state.value.trim() === "") {
                //     setError(state, "State is required.");
                //     isValid = false;
                // } else {
                //     clearError(state);
                // }

                // Validate Max Value
                const max = document.getElementById("max");
                if (max.value === "" || max.value <= 0) {
                    setError(max, "Maximum discount must be greater than 0.");
                    isValid = false;
                } else {
                    clearError(max);
                }

                // Validate Min Value
                const min = document.getElementById("min");
                if (min.value === "" || min.value <= 0) {
                    setError(min, "Min parchase must be greater than 0.");
                    isValid = false;
                } else {
                    clearError(min);
                }

                // Validate Start Date
                const startDate = document.getElementById("startDate");
                if (startDate.value === "") {
                    setError(startDate, "Start date is required.");
                    isValid = false;
                } else {
                    clearError(startDate);
                }

                // Validate End Date
                const endDate = document.getElementById("endDate");
                if (endDate.value === "") {
                    setError(endDate, "End date is required.");
                    isValid = false;
                } else if (new Date(endDate.value) < new Date(startDate.value)) {
                    setError(endDate, "End date must be after the Start date.");
                    isValid = false;
                } else {
                    clearError(endDate);
                }

                // Prevent form submission if any field is invalid
                if (!isValid) {
                    event.preventDefault();
                    event.stopPropagation();
                }
                const data = {
                    couponName: document.getElementById("couponName").value.trim(),
                    couponCode: document.getElementById("couponCode").value.trim(),
                    description: document.getElementById("description").value.trim(),
                    discount: document.getElementById("discount").value.trim(),
                    status:  document.getElementById("status").value.trim(),
                    maxDiscount: document.getElementById("max").value.trim(),
                    minParchase: document.getElementById("min").value.trim(),
                    startDate: document.getElementById("startDate").value,
                    endDate: document.getElementById("endDate").value,
                }
                console.log(data);
                event.preventDefault(); // Prevent the form from reloading the page

                if (isValid) {
                    fetch("/admin/updatecoupon", {
                        method: "POST",
                        headers: {
                            "Content-Type": "application/json",
                        },
                        body: JSON.stringify(data),
                    })
                        .then((response) => response.json()) // Parse the response as JSON
                        .then((data) => {
                            if (data.success) { // Check for the 'success' property in the parsed data
                                Swal.fire({
                                    icon: "success",
                                    title: "Success!",
                                    text: "Coupon added successfully.",
                                    confirmButtonText: "OK",
                                }).then(() => {
                                    window.location.reload();
                                });
                            } else {
                                Swal.fire({
                                    icon: "error",
                                    title: "Failed!",
                                    text: data.message || "Could not add the coupon. Please try again.",
                                    confirmButtonText: "OK",
                                });
                            }
                        })
                        .catch((err) => {
                            Swal.fire({
                                icon: "error",
                                title: "Server Error!",
                                text: "An error occurred while connecting to the server.",
                                confirmButtonText: "OK",
                            });
                            console.log(err);
                        });
                }


                // Add Bootstrap validation class
                // form.classList.add("was-validated");
            });

            // Function to set error messages
            function setError(element, message) {
                const parent = element.parentElement;
                parent.classList.add("was-validated");
                const feedback = parent.querySelector(".invalid-feedback");
                if (!feedback) {
                    const errorDiv = document.createElement("div");
                    errorDiv.className = "invalid-feedback";
                    errorDiv.textContent = message;
                    parent.appendChild(errorDiv);
                } else {
                    feedback.textContent = message;
                }
                element.classList.add("is-invalid");
                element.classList.remove("is-valid");
            }

            // Function to clear error messages
            function clearError(element) {
                const parent = element.parentElement;
                const feedback = parent.querySelector(".invalid-feedback");
                if (feedback) {
                    feedback.remove();
                }
                element.classList.remove("is-invalid");
                element.classList.add("is-valid");
            }
        });

    </script> -->
</body>

</html>