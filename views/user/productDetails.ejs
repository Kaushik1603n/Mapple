<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Product Details</title>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/css/bootstrap.min.css" rel="stylesheet"
        integrity="sha384-QWTKZyjpPEjISv5WaRU9OFeRpok6YctnYmDr5pNlyT2bRjXh0JMhjY6hW+ALEwIH" crossorigin="anonymous">
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.11.3/font/bootstrap-icons.min.css">
    <link rel="stylesheet" href="/stylesheet/productDetails.css">
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.7.1/css/all.min.css"
        integrity="sha512-5Hs3dF2AEPkpNAR7UiOHba+lRSJNeM2ECkwxUIxC1Q/FLycGTbNapWXB4tP889k5T5Ju8fs4b1P5z/iB4nMfSQ=="
        crossorigin="anonymous" referrerpolicy="no-referrer" />
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/sweetalert2@11/dist/sweetalert2.min.css">

</head>

<body>
    <%- include("../../views/partials/user/header") %>

        <!-- Product Details Section -->
        <main class=" pt-5">
            <div class="container mt-5 ">
                <div class="row">
                    <div class="col-lg-6 text-center">
                        <div id="productCarousel" class="carousel slide zoom-wrapper">
                            <div class="carousel-inner">
                                <% productDetails.productImage.forEach((image, index)=> { %>
                                    <div class="carousel-item <%= index === 0 ? 'active' : '' %>">
                                        <img src="<%= image %>" class="d-block w-100 img-fluid zoom-image"
                                            alt="Product Image <%= index + 1 %>">
                                    </div>
                                    <% }); %>
                            </div>
                            <button class="carousel-control-prev" type="button" data-bs-target="#productCarousel"
                                data-bs-slide="prev">
                                <span class="carousel-control-prev-icon" aria-hidden="true"></span>
                                <span class="visually-hidden">Previous</span>
                            </button>
                            <button class="carousel-control-next" type="button" data-bs-target="#productCarousel"
                                data-bs-slide="next">
                                <span class="carousel-control-next-icon" aria-hidden="true"></span>
                                <span class="visually-hidden">Next</span>
                            </button>
                        </div>

                        <div class="d-flex justify-content-center mt-3">
                            <% productDetails.productImage.forEach((image, index)=> { %>
                                <img src="<%= image %>" class="img-thumbnail mx-2" style="width: 60px; height: 40px;"
                                    alt="Thumbnail <%= index + 1 %>" onclick="switchToSlide('<%= index %>')">
                                <% }); %>
                        </div>

                    </div>

                    <!-- Product Details -->
                    <div class="col-lg-6">
                        <h1>
                            <%= productDetails.productName %>
                                <%= productDetails.variant %>
                                    (<%= productDetails.processor %>)
                        </h1>
                        <% if(productOffer) { %>
                            <p class="text-dark fw-bold fs-3 mb-0">
                                <span>&#8377;</span>
                                <%= (productDetails.regularPrice -(productDetails.regularPrice *
                                    productOffer/100)).toLocaleString() %>
                                    <span class="text-muted fs-6 ms-2" style="text-decoration: line-through;">
                                        <%= productDetails.regularPrice.toLocaleString() %>
                                    </span>
                                    <span class=" fs-6 ms-2 text-success">Special <%= productOffer %> % off</span>
                            </p>
                            <% } else { %>
                                <p class="text-dark fw-bold fs-3 mb-0">
                                    <span>&#8377;</span>
                                    <%= productDetails.salePrice %>
                                        <span class="text-muted fs-6 ms-2" style="text-decoration: line-through;">
                                            <%= productDetails.regularPrice %>
                                        </span>
                                </p>
                                <% } %>
                                    <span
                                        class="fs-6 fw-bold <%= productDetails.status === 'Available' ? 'text-success' : 'text-danger' %>">
                                        (<%= productDetails.status %>)
                                    </span>
                                    <div id="productQuantity" class="fs-6 fw-bold py-1 px-2 rounded  
                        <% if (productDetails.status === 'Out of stock') { %>
                            bg-danger text-white
                        <% } else if (productDetails.quantity < 10) { %>
                            bg-warning text-dark
                        <% } else { %>
                            bg-success text-white
                        <% } %>" style="display: inline-block; margin-top: 5px;">
                                        Left: <%= productDetails.quantity %>
                                    </div>

                                    <div class="rating mb-2">
                                        <i class="bi bi-star-fill"></i>
                                        <i class="bi bi-star-fill"></i>
                                        <i class="bi bi-star-fill"></i>
                                        <i class="bi bi-star-fill"></i>
                                        <i class="bi bi-star"></i>
                                    </div>


                                    <h6 class="mt-3 fw-bold">Available Variants</h6>
                                    <div>
                                        <% availableVariants.forEach(variant=> { %>
                                            <button
                                                class="btn btn-outline-secondary me-2  <% if (activeVariant === variant) { %>active<% } %>"
                                                onclick="updateProductDetails(null, '<%= variant %>')">
                                                <%= variant %>
                                            </button>
                                            <% }); %>
                                    </div>

                                    <h6 class="mt-3 fw-bold">Available Colors</h6>
                                    <div>

                                        <% availableColors.forEach((color)=> { %>
                                            <span
                                                class="badge me-2 p-3 colorBadge <% if (activeColor === color) { %>active<% } %>"
                                                data-color="<%= color %>"
                                                onclick="updateProductDetails('<%= color %>', null)"
                                                style=`background-color: ${color};`>

                                            </span>
                                            <% }); %>

                                    </div>

                                    <div
                                        class="<%= productDetails.status === 'Available' ? 'd-flex align-items-center mt-4' : 'd-none' %>">
                                        <button class="btn btn-outline-secondary me-2" id="decreaseButton">-</button>
                                        <input type="text" value="1" class="form-control text-center w-25 me-2"
                                            id="quantityInput" readonly>
                                        <button class="btn btn-outline-secondary me-3" id="increaseButton">+</button>
                                    </div>

                                    <div class="product-buttons">
                                        <button
                                            class="<%= productDetails.status === 'Available' ? 'btn btn-primary' : 'd-none' %> "
                                            id="addToCartButton" data-product-id="<%= productDetails._id %>">Add to
                                            Cart</button>
                                        <button class="btn btn-secondary" id="addToWishlistButton"
                                            data-id="<%= productDetails._id %>">Add to
                                            Wishlist</button>
                                    </div>
                    </div>

                </div>
            </div>

            <div class="container mt-5">
                <h3>Specifications</h3>
                <%- productDetails.description %>
            </div>

            <div class="container mt-5 mb-5">
                <h3>Reviews</h3>
                <% allReview.forEach((review,index)=>{ %>
                    <div class="rating mb-2">
                        <% for(i=1;i<=review.rating; i++) { %>
                            <i class="bi bi-star-fill"></i>
                            <% } %>(<%= review.rating %>/5)
                    </div>
                    <ul class="list-group">
                        <li class="list-group-item">
                            <h5>
                                <%= review.user.name %>
                            </h5>
                            <p> <b>
                                    <%= review.reviewTittle %> :
                                </b>
                                <%= review.reviewText %>
                            </p>
                        </li>

                    </ul>
                    <% }) %>
            </div>

            <div class="container mt-5 mb-5">
                <h3>Recommended</h3>
                <div class="row g-5">
                    <!-- Product Card -->
                    <% products.forEach(product=> { %>
                        <div class="col-12 col-sm-6 col-md-4 col-lg-3">
                            <div class="card border-0 shadow-lg text-center">
                                <div class="position-relative">
                                    <img src="<%= product.productImage[0] %>" class="card-img-top mx-auto pt-3 p-1"
                                        alt="<%= product.productName %>" style="width: 280px;">

                                    <button class="btn btn-outline-light position-absolute top-0 end-0 m-2 like-btn"
                                        data-id="<%= product._id %>">
                                        <span class="like-icon">&#9825;</span>
                                    </button>
                                </div>
                                <div class="card-body">
                                    <h5 class="card-title">
                                        <%= product.productName %>
                                            <%= product.variant %>
                                    </h5>
                                    <p class="text-muted mb-2"><span>&#8377;</span>
                                        <%= product.salePrice.toLocaleString() %>
                                    </p>
                                    <div class="rating mb-3">
                                        <i class="bi bi-star-fill"></i>
                                        <i class="bi bi-star-fill"></i>
                                        <i class="bi bi-star-fill"></i>
                                        <i class="bi bi-star-fill"></i>
                                        <i class="bi bi-star"></i>
                                    </div>
                                    <a href="/user/productDetails/<%= product._id %>" class="btn btn-dark w-100">Buy
                                        Now</a>
                                </div>
                            </div>
                        </div>
                        <% }); %>

                            <div class="text-center mt-4">
                                <button id="showMoreBtn" class="btn btn-secondary px-4 py-2">Show More</button>
                            </div>
                </div>
            </div>

        </main>

        <%- include("../../views/partials/user/footer") %>


            <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/js/bootstrap.bundle.min.js"
                integrity="sha384-YvpcrYf0tY3lHB60NNkmXc5s9fDVZLESaAA55NDzOxhy9GkcIdslK1eN7N6jIeHz"
                crossorigin="anonymous"></script>
            <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
            <script>
                document.addEventListener("DOMContentLoaded", () => {
                    const likeButtons = document.querySelectorAll(".like-btn");

                    const likedProducts = {};

                    likeButtons.forEach((button) => {
                        button.addEventListener("click", (event) => {
                            const productId = event.target.closest(".like-btn").getAttribute("data-id");
                            const likeIcon = button.querySelector(".like-icon");

                            // if (likedProducts[productId]) {
                            //     likedProducts[productId] = false;
                            //     likeIcon.textContent = "♡"; 
                            //     likeIcon.style.color = ""; 
                            // } else {
                            //     likedProducts[productId] = true;
                            //     likeIcon.textContent = "♥";
                            //     likeIcon.style.color = "red"; 
                            // }

                            const isLiked = !likedProducts[productId];
                            likedProducts[productId] = isLiked;

                            likeIcon.textContent = isLiked ? "♥" : "♡";
                            likeIcon.style.color = isLiked ? "red" : "";

                            console.log(`ProductId : ${productId} liked: ${likedProducts[productId]}`);

                            fetch("/user/wishlist", {
                                method: "POST",
                                headers: {
                                    'Content-Type': 'application/json',
                                },
                                body: JSON.stringify({
                                    productId,
                                    liked: isLiked
                                }),
                            })
                                .then(response => {
                                    return response.json().then(data => {
                                        if (response.ok) {
                                            console.log("Success: " + data.message);
                                        } else {
                                            alert("Failed: " + data.error || "An error occurred");
                                        }
                                    });
                                }).catch(error => {
                                    console.error('Error:', error);
                                    alert("Failed: Network error or server unavailable.");

                                });
                        });
                    });
                });

            </script>
            <script>
                function switchToSlide(slideIndex) {
                    const carousel = new bootstrap.Carousel('#productCarousel');
                    carousel.to(slideIndex);
                }

                const decreaseButton = document.getElementById('decreaseButton');
                const increaseButton = document.getElementById('increaseButton');
                const quantityInput = document.getElementById('quantityInput');

                const productQuantityText = document.getElementById("productQuantity").innerText;
                const productQuantity = parseInt(productQuantityText.replace("Left: ", ""), 10);
                let quantity = 1;

                decreaseButton.addEventListener('click', function () {
                    // if (productQuantity >= quantity) {
                    if (quantity > 1) {
                        quantity--;
                        quantityInput.value = quantity;
                    }
                    // }
                });

                increaseButton.addEventListener('click', function () {
                    if (productQuantity > quantity) {
                        if (productQuantity) {
                            quantity++;
                            quantityInput.value = quantity;
                        }
                    }
                });


                const storageButtons = document.querySelectorAll('button[data-storage]');
                storageButtons.forEach(button => {
                    button.addEventListener('click', function () {
                        storageButtons.forEach(b => b.classList.remove('active'));
                        button.classList.add('active');
                        const selectedStorage = button.getAttribute('data-storage');
                        console.log('Selected Storage:', selectedStorage);
                    });
                });

                const colorBadges = document.querySelectorAll('.badge');
                colorBadges.forEach(badge => {
                    badge.addEventListener('click', function () {
                        colorBadges.forEach(b => b.classList.remove('active'));
                        this.classList.add('active');
                        const selectedColor = this.getAttribute('data-color');
                        console.log('Selected Color:', selectedColor);
                    });
                });

                function updateProductDetails(color, variant) {
                    const url = new URL(window.location.href);
                    if (color) url.searchParams.set('color', color);
                    if (variant) url.searchParams.set('variant', variant);
                    window.location.href = url.toString();
                }

                document.addEventListener("DOMContentLoaded", () => {
                    const badges = document.querySelectorAll(".colorBadge");

                    badges.forEach((badge) => {
                        const color = badge.getAttribute("data-color");
                        badge.style.backgroundColor = color;
                    });
                });

                function applyZoom(wrapper) {
                    wrapper.addEventListener("mousemove", (e) => {
                        const img = wrapper.querySelector(".carousel-item.active .zoom-image");
                        if (!img) return;

                        const rect = wrapper.getBoundingClientRect();
                        const x = (e.clientX - rect.left) / rect.width;
                        const y = (e.clientY - rect.top) / rect.height;

                        img.style.transformOrigin = `${x * 100}% ${y * 100}%`;
                    });

                    wrapper.addEventListener("mouseenter", () => {
                        const img = wrapper.querySelector(".carousel-item.active .zoom-image");
                        if (img) img.classList.add("zoomed");
                    });

                    wrapper.addEventListener("mouseleave", () => {
                        const img = wrapper.querySelector(".carousel-item.active .zoom-image");
                        if (img) img.classList.remove("zoomed");
                    });
                }

                function initializeZoomCarousel() {
                    const zoomWrappers = document.querySelectorAll(".zoom-wrapper");

                    zoomWrappers.forEach(wrapper => {
                        applyZoom(wrapper);

                        const carousel = wrapper.querySelector(".carousel");
                        if (carousel) {
                            carousel.addEventListener("slid.bs.carousel", () => {
                                wrapper.querySelectorAll(".zoom-image").forEach(img => {
                                    img.style.transformOrigin = "";
                                    img.classList.remove("zoomed");
                                });
                            });
                        }
                    });
                }

                initializeZoomCarousel();


                document.addEventListener('DOMContentLoaded', () => {
                    const addToCartButton = document.getElementById('addToCartButton');
                    const quantityInput = document.getElementById('quantityInput');
                    const addToWishlist = document.getElementById('addToWishlistButton');

                    if (addToCartButton) {
                        addToCartButton.addEventListener('click', () => {

                            const productId = addToCartButton.getAttribute('data-product-id');
                            const quantity = parseInt(quantityInput.value, 10);

                            if (!productId || quantity <= 0) {
                                Swal.fire({
                                    title: 'Invalid Input!',
                                    text: 'Invalid product or quantity.',
                                    icon: 'warning',
                                    confirmButtonText: 'OK'
                                });

                                return;
                            }

                            const cartData = {
                                productId: productId,
                                quantity: quantity,
                            };



                            fetch('/user/cart', {
                                method: 'POST',
                                headers: {
                                    'Content-Type': 'application/json',
                                },
                                body: JSON.stringify(cartData),
                            })
                                .then(response => {
                                    console.log(`Response Status: ${response.status}`);
                                    return response.json();
                                })
                                .then(data => {
                                    console.log("Response Data:", data);
                                    if (data.success) {
                                        Swal.fire({
                                            title: 'Success!',
                                            text: 'Product added to cart successfully!',
                                            icon: 'success',
                                            confirmButtonText: 'OK'
                                        });
                                    } else {
                                        Swal.fire({
                                            title: 'Error!',
                                            text: data.message || 'Failed to add product to cart.',
                                            icon: 'error',
                                            confirmButtonText: 'Try Again'
                                        });
                                    }

                                })
                                .catch(err => {
                                    console.error('Error adding product to cart:', err);
                                    Swal.fire({
                                        title: 'Error!',
                                        text: 'Something went wrong. Please try again.',
                                        icon: 'error',
                                        confirmButtonText: 'OK'
                                    }).then(() => {
                                        window.location.href = window.location.href; 
                                    });

                                });
                        });
                    }

                    if (addToWishlist) {
                        addToWishlist.addEventListener('click', () => {
                            const productId = addToWishlist.getAttribute('data-id');
                            alert(productId)

                            fetch("/user/wishlist", {
                                method: "POST",
                                headers: {
                                    'Content-Type': 'application/json',
                                },
                                body: JSON.stringify({
                                    productId,
                                    liked: true
                                }),
                            })
                                .then(response => {
                                    return response.json().then(data => {
                                        if (response.ok) {
                                            console.log("Success: " + data.message);
                                        } else {
                                            alert("Failed: " + data.error || "An error occurred");
                                        }
                                    });
                                }).catch(error => {
                                    console.error('Error:', error);
                                    alert("Failed: Network error or server unavailable.");

                                });
                        });
                    }
                });

            </script>
</body>

</html>