<!DOCTYPE html>
<html lang="en">

<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>OTP Validation</title>
  <link rel="icon" type="image/png" href="/icon/apple.png">
  <link rel="stylesheet" href="/stylesheet/login.css">
  <link href="https://cdn.jsdelivr.net/npm/sweetalert2@11.5.2/dist/sweetalert2.min.css" rel="stylesheet">

</head>

<body>
  <div class="container">
    <div class="form-container">
      <h1>Enter OTP</h1>
      <p>An OTP has been sent to <b>  <%= email %></b>. Enter it below.</p>
      <% if (locals.message && locals.message.length> 0) { %>
        <div class="alert alert-danger" role="alert">
          <%= locals.message %>
        </div>
        <% } %>
          <form id="formID" action="/otpValidation" method="POST" onsubmit="return validateOTPform()">
            <input type="hidden" name="email" value="<%= email %>">
            <input type="text" id="otp" placeholder="OTP" name="otp" required>
            <button class="create-account-btn" type="submit" id="continue-btn" >Continue</button>
            <p class="login-link">
              Don't receive OTP code?
              <a href="" id="resend-link" onclick="resendOTP()" style="pointer-events: none; color: gray;">Resend</a>
              <span id="timer"></span>
            </p>
          </form>
    </div>
    <div class="image-container">
      <img src="/image/lap.webp" alt="Placeholder Image">
    </div>
  </div>
  <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11.5.2/dist/sweetalert2.min.js"></script>

  <script>
    async function validateOTPform() {
      const otpInput = document.getElementById("otp").value;
  
      try {
        const response = await fetch("/otpValidation", {
          method: "POST",
          headers: {
            "Content-Type": "application/json",
          },
          body: JSON.stringify({ otp: otpInput }),
        });
  
        const result = await response.json();
        console.log("Response from server:", result); // Debug log
  
        if (result.success) {
          Swal.fire({
            icon: "success",
            title: "OTP verified successfully",
            showConfirmButton: false,
            timer: 1500,
          }).then(() => {
            window.location.href = result.redirectUrl; // Ensure this URL is correct
          });
        } else {
          Swal.fire({
            icon: "error",
            title: "Error",
            text: result.message || "Something went wrong",
          });
        }
      } catch (error) {
        console.error("Fetch Error:", error);
        Swal.fire({
          icon: "error",
          title: "Invalid OTP",
          text: "Please try again",
        });
      }
  
      return false; 
    }
  
    let countdownInterval;
  
    function startTimer(duration) {
      const timerElement = document.getElementById("timer");
      const resendLink = document.getElementById("resend-link");
      const continueButton = document.getElementById("continue-btn");
  
      resendLink.style.pointerEvents = "none";
      resendLink.style.color = "gray";
  
      let timeRemaining = duration;
      timerElement.textContent = ` (00:${timeRemaining < 10 ? '0' : ''}${timeRemaining})`;
  
      countdownInterval = setInterval(() => {
        timeRemaining -= 1;
        if (timeRemaining >= 0) {
          timerElement.textContent = ` (00:${timeRemaining < 10 ? '0' : ''}${timeRemaining})`;
        } else {
          clearInterval(countdownInterval);
          timerElement.textContent = "";
          resendLink.style.pointerEvents = "auto";
          resendLink.style.color = "blue";
  
          // Disable the Continue button after time expires
          continueButton.disabled = true;
          continueButton.style.backgroundColor = "gray"; // Optional: visually indicate disabled state
          continueButton.style.cursor = "not-allowed"; // Change cursor to indicate it's disabled
        }
      }, 1000);
    }
  
    async function resendOTP(event) {
      event.preventDefault(); 
  
      clearInterval(countdownInterval); 
      try {
        const response = await fetch("/otpResend", {
          method: "POST",
        });
  
        const result = await response.json();
        if (result.success) {
          Swal.fire({
            icon: "success",
            title: "OTP Resent",
            text: "A new OTP has been sent to your email.",
          });
          startTimer(60);
  
          const continueButton = document.getElementById("continue-btn");
          continueButton.disabled = false;
          continueButton.style.backgroundColor = "black"; 
          continueButton.style.cursor = "pointer"; 
        } else {
          Swal.fire({
            icon: "error",
            title: "Error",
            text: "Failed to resend OTP. Please try again later.",
          });
        }
      } catch (error) {
        console.error("Fetch Error:", error);
        Swal.fire({
          icon: "error",
          title: "Error",
          text: "An error occurred while resending OTP.",
        });
      }
    }
  
    document.getElementById("resend-link").addEventListener("click", resendOTP);
  
    window.onload = function () {
      startTimer(60); 
    };
  </script>
  
  
</body>
</html>