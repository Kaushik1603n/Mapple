<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Checkout Page</title>
    <!-- Bootstrap CSS -->
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css" rel="stylesheet">
    <style>
        body {
            background-color: #f9f9f9;
            padding: 20px;
        }

        .order-summary {
            background-color: #fff;
            border: 1px solid #ddd;
            padding: 20px;
            border-radius: 8px;
        }

        .payment-method {
            background-color: #fff;
            border: 1px solid #ddd;
            padding: 20px;
            border-radius: 8px;
        }

        #alertBox {
            cursor: pointer;
            background-color: #464545;
            color: white;
            padding: 10px;
            border-radius: 5px;
            font-weight: bold;
            text-align: center;
            width: 150px;
            position: fixed;
            top: 20px;
            right: 20px;
            z-index: 1000;
        }

        /* Styling for the coupon panel */
        #couponPanel {
            position: fixed;
            right: -300px;
            /* Initially off-screen */
            top: 0;
            height: 100%;
            width: 300px;
            background-color: #f9f9f9;
            border-left: 1px solid #ddd;
            box-shadow: -2px 0 10px rgba(0, 0, 0, 0.1);
            transition: right 0.3s ease;
            /* Smooth transition for sliding in/out */
            padding: 20px;
            display: flex;
            flex-direction: column;
            overflow-y: auto;
            /* Enable vertical scrolling */
            max-height: 100%;
            /* Ensure the panel stays within the viewport height */
        }

        #couponPanel ul {
            list-style-type: none;
            padding: 0;
            margin: 0;
        }

        #couponPanel li {
            padding: 10px;
            border-bottom: 1px solid #ddd;
        }

        #couponPanel li:last-child {
            border-bottom: none;
        }

        .coupon-title {
            font-weight: bold;
        }
    </style>
</head>

<body>
    <div class="container">
        <div id="alertBox">
            Show Coupon
        </div>

        <!-- Coupon Panel -->
        <div id="couponPanel">
            <h5 class="mt-5">Available Coupons</h5>
            <ul>
                <!-- <li>
                    <span class="coupon-title">SAVE20 - </span><span class="text-success">20% off</span>
                    <p class="small text-muted">Valid until: 31st January 2025</p>
                </li>
                <li>
                    <span class="coupon-title">FREESHIP - </span><span class="text-success">Free Shipping</span>
                    <p class="small text-muted">Valid until: 15th February 2025</p>
                </li>
                <li>
                    <span class="coupon-title">NEWYEAR50 - </span><span class="text-success">50% off on New Year
                        Sale</span>
                    <p class="small text-muted">Valid until: 5th January 2025</p>
                </li>
                <li>
                    <span class="coupon-title">SAVE20 - </span><span class="text-success">20% off</span>
                    <p class="small text-muted">Valid until: 31st January 2025</p>
                </li>
                <li>
                    <span class="coupon-title">FREESHIP - </span><span class="text-success">Free Shipping</span>
                    <p class="small text-muted">Valid until: 15th February 2025</p>
                </li>
                <li>
                    <span class="coupon-title">NEWYEAR50 - </span><span class="text-success">50% off on New Year
                        Sale</span>
                    <p class="small text-muted">Valid until: 5th January 2025</p>
                </li> -->

            </ul>
        </div>
        <!-- Delivery Address Section -->
        <div class="row mb-4">
            <div class="col-md-12">
                <div class="bg-white p-4 rounded border">
                    <h5 class="mb-3">Delivery Address</h5>

                    <% if (userAddress) { %>
                        <% if (userAddress.address && userAddress.address.length> 0) { %>
                            <% userAddress.address.forEach((addr, index)=> { %>
                                <div class="form-check">
                                    <input class="form-check-input" type="radio" name="address" id="address<%= index %>"
                                        value="<%= index %>">
                                    <label class="form-check-label" for="address<%= index %>">
                                        <%= addr.name %>, <%= addr.homeAddress %>, <%= addr.landmark %>, pin <%=
                                                        addr.zipCode %>,
                                                        <%= addr.city %>, <%= addr.state %>, <%= addr.country %>, <%=
                                                                        addr.phoneNumber %>
                                    </label>
                                    <input type="hidden" id="addressData<%= index %>" data-name="<%= addr.name %>"
                                        data-phoneNumber="<%= addr.phoneNumber %>"
                                        data-homeAddress="<%= addr.homeAddress %>" data-landmark="<%= addr.landmark %>"
                                        data-city="<%= addr.city %>" data-state="<%= addr.state %>"
                                        data-zipCode="<%= addr.zipCode %>" data-country="<%= addr.country %>">
                                </div>
                                <% }); %>
                                    <% } else { %>
                                        <p>No address available.</p>
                                        <% } %>
                                            <% } else { %>
                                                <div class="form-check">
                                                    <p>No address available.</p>
                                                    <a href="/user/address" class="btn bg-secondary text-white">Add
                                                        address</a>
                                                </div>
                                                <% } %>
                                                    <!-- <button class="btn btn-dark mt-3" id="addAddressBtn">Add Address</button> -->
                </div>

            </div>
        </div>

        <div class="row">
            <!-- Billing Details -->
            <div class="col-md-8">
                <div class="bg-white p-4 rounded border mb-4">
                    <h5 class="mb-3">Billing Details</h5>
                    <form>
                        <div class="row mb-3">
                            <div class="col-md-6">
                                <label for="name" class="form-label">Name</label>
                                <input type="text" class="form-control" id="name" placeholder="Enter your Name">
                                <div id="nameError" class="text-danger"></div>
                            </div>
                            <div class="col-md-6">
                                <label for="phoneNumber" class="form-label">Phone Number</label>
                                <input type="text" class="form-control" id="phoneNumber"
                                    placeholder="Enter your phone number">
                                <div id="phoneNumberError" class="text-danger"></div>
                            </div>
                        </div>
                        <div class="mb-3">
                            <label for="houseAddress" class="form-label">House Address</label>
                            <input type="text" class="form-control" id="houseAddress"
                                placeholder="Enter your house address">
                            <div id="houseAddressError" class="text-danger"></div>
                        </div>
                        <div class="mb-3">
                            <label for="landmark" class="form-label">Landmark</label>
                            <input type="text" class="form-control" id="landmark" placeholder="Enter a nearby landmark">
                            <div id="landmarkError" class="text-danger"></div>

                        </div>
                        <div class="row mb-3">
                            <div class="col-md-6">
                                <label for="city" class="form-label">City</label>
                                <input type="text" class="form-control" id="city" placeholder="City">
                                <div id="cityError" class="text-danger"></div>
                            </div>
                            <div class="col-md-6">
                                <label for="state" class="form-label">State</label>
                                <input type="text" class="form-control" id="state" placeholder="State">
                                <div id="stateError" class="text-danger"></div>
                            </div>
                        </div>
                        <div class="row mb-3">
                            <div class="col-md-6">
                                <label for="zipCode" class="form-label">Zip Code</label>
                                <input type="text" class="form-control" id="zipCode" placeholder="Zip Code">
                                <div id="zipCodeError" class="text-danger"></div>
                            </div>
                            <div class="col-md-6">
                                <label for="country" class="form-label">Country</label>
                                <input type="text" class="form-control" id="country" placeholder="Country">
                                <div id="countryError" class="text-danger"></div>
                            </div>
                        </div>

                        <div class="form-check">
                            <input class="form-check-input" type="checkbox" id="sameAsDelivery">
                            <label class="form-check-label" for="sameAsDelivery">
                                Same as delivery address
                            </label>
                        </div>
                    </form>
                </div>
            </div>

            <!-- Payment Method & Order Summary -->
            <div class="col-md-4">
                <div class="payment-method mb-3">
                    <h5 class="mb-3">Payment Method</h5>
                    <form>
                        <div class="form-check">
                            <input class="form-check-input" type="radio" name="paymentMethod" id="upi" checked>
                            <label class="form-check-label" for="upi">Razor pay</label>
                        </div>
                        <div class="form-check">
                            <input class="form-check-input" type="radio" name="paymentMethod" id="wallet">
                            <label class="form-check-label" for="wallet">Wallet</label>
                        </div>
                        <div class="form-check">
                            <input class="form-check-input" type="radio" name="paymentMethod" id="cod" checked>
                            <label class="form-check-label" for="cod">Cash on Delivery</label>
                        </div>
                        <div class="form-check mt-3">
                            <input class="form-check-input" type="checkbox" id="termsConditions">
                            <label class="form-check-label" for="termsConditions">
                                I have read and accept the terms and conditions
                            </label>
                        </div>
                    </form>
                </div>

                <div class="apply-coupon d-flex align-items-center ">
                    <input type="text" class="form-control me-2" id="couponCode" value="<%= couponCode %>"
                        placeholder="Enter Coupon Code">
                    <!-- <% if (couponCode && couponCode.length>3) { %> -->
                    <!-- <% } else { %> -->
                    <!-- <% } %> -->
                    <button id="removeCouponBtn" class="btn btn-danger my-1" onclick="remove_coupon()"
                        style="display: none;">Remove</button>
                    <button id="applyCouponBtn" class="btn btn-primary my-1">Apply</button>
                </div>
                <p id="couponMessage" class="text-success m-3"></p>
                <p id="couponMessageFalse" class="text-danger m-3"></p>

                <% if (userCart) { %>
                    <div class="order-summary">
                        <h5 class="mb-3">Order Summary</h5>
                        <p>Sub-total: <span class="float-end">₹<%= userCart.totalAmount %></span></p>
                        <p>Shipping: <span class="float-end" id="deliveryCharge">₹0</span></p>
                        <p>Coupon Discount: <span class="float-end text-success" id="discountAmount"></span>
                        <p>Discount: <span class="float-end text-success">-₹<%= userCart.totalDiscountAmount %></span>
                        </p>
                        <!-- <p>Tax: <span class="float-end">₹1,599</span></p> -->
                        <hr>
                        <p><strong>Total: <span class="float-end" id="totalAmount">₹<%=
                                        userCart.totalActualAmount.toFixed(2) %>
                                </span></strong></p>
                        <span class="float-end" id="totalActualAmount" hidden>₹<%= userCart.totalActualAmount %>
                        </span>
                        <button class="btn btn-dark w-100" id="placeOrderBtn">Place Order</button>
                        <input type="hidden" value="<%= JSON.stringify(userCart) %>" id="cartData">
                    </div>
                    <% } %>
            </div>
        </div>
    </div>

    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
    <script src="https://checkout.razorpay.com/v1/checkout.js"></script>
    <script>
        const alertBox = document.getElementById('alertBox');
        const couponPanel = document.getElementById('couponPanel');
        alertBox.addEventListener('click', () => {
            if (couponPanel.style.right === '0px') {
                couponPanel.style.right = '-300px';
            } else {
                couponPanel.style.right = '0px';
            }
        });

        async function getCoupon() {

            try {
                const response = await fetch('/user/getCoupon', {
                    method: 'GET',
                    headers: { 'Content-Type': 'application/json' },
                });

                if (!response.ok) {
                    throw new Error('Network response was not ok');
                }

                const coupon = await response.json();
                displayCoupon(coupon.data);
            } catch (error) {
                console.error('Error fetching coupon:', error);
            }
        }
        getCoupon();

        function displayCoupon(coupons) {
            const couponList = document.querySelector('#couponPanel ul');

            couponList.innerHTML = ''; // Clear any existing coupons

            coupons.forEach(coupon => {
                const li = document.createElement('li'); // Create a new list item for each coupon

                li.innerHTML = `
            <span class="coupon-title">${coupon.couponCode} - </span><span class="text-success">${coupon.discount}% off</span>
            <p class="small text-muted mb-1">Max Discount: ${coupon.maxDiscount}</p>
            <p class="small text-muted mb-1">Min Purchase: ${coupon.mininumParchase}</p>
            <p class="small text-muted">Valid until: ${new Date(coupon.endDate).toLocaleDateString()}</p>
            <button class="btn btn-sm btn-outline-dark copy-btn" data-coupon-code="${coupon.couponCode}">Copy Code</button>
        `;

                couponList.appendChild(li);

                const copyBtn = li.querySelector('.copy-btn');
                copyBtn.addEventListener('click', () => {
                    const couponCode = copyBtn.getAttribute('data-coupon-code');

                    navigator.clipboard.writeText(couponCode)
                        .then(() => {
                            console.log('Coupon code copied to clipboard!');
                        })
                        .catch((error) => {
                            console.error('Error copying text: ', error);
                        });
                });
            });
        }


    </script>

    <script>
        document.addEventListener("DOMContentLoaded", function () {
            const cartData = JSON.parse(document.getElementById("cartData").value);
            const totalAmount = cartData.totalActualAmount;
            console.log(totalAmount);

            let deliveryCharge = totalAmount > 10000 ? 0 : 40;

            document.getElementById("deliveryCharge").textContent = `₹${deliveryCharge}`;

            const totalElement = document.getElementById("totalAmount");
            const newTotal = totalAmount + deliveryCharge;
            totalElement.textContent = `₹${newTotal.toFixed(2)}`;
        });

        document.getElementById('sameAsDelivery').addEventListener('change', function () {
            const selectedAddress = document.querySelector('input[name="address"]:checked');
            if (this.checked && selectedAddress) {
                const selectedIndex = selectedAddress.value;

                const addressData = document.getElementById(`addressData${selectedIndex}`);
                if (addressData) {
                    document.getElementById('name').value = addressData.getAttribute('data-name');
                    document.getElementById('phoneNumber').value = addressData.getAttribute('data-phoneNumber');
                    document.getElementById('houseAddress').value = addressData.getAttribute('data-homeAddress');
                    document.getElementById('landmark').value = addressData.getAttribute('data-landmark');
                    document.getElementById('city').value = addressData.getAttribute('data-city');
                    document.getElementById('state').value = addressData.getAttribute('data-state');
                    document.getElementById('zipCode').value = addressData.getAttribute('data-zipCode');
                    document.getElementById('country').value = addressData.getAttribute('data-country');
                }
            } else {
                document.getElementById('name').value = '';
                document.getElementById('phoneNumber').value = '';
                document.getElementById('houseAddress').value = '';
                document.getElementById('landmark').value = '';
                document.getElementById('city').value = '';
                document.getElementById('state').value = '';
                document.getElementById('zipCode').value = '';
                document.getElementById('country').value = '';
            }
        });

        document.getElementById('placeOrderBtn').addEventListener('click', function () {
            const selectedAddressIndex = document.querySelector('input[name="address"]:checked')?.value;
            const addressData = selectedAddressIndex !== undefined
                ? document.getElementById(`addressData${selectedAddressIndex}`)
                : null;

            const deliveryAddress = addressData
                ? {
                    name: addressData.getAttribute('data-name'),
                    phoneNumber: addressData.getAttribute('data-phoneNumber'),
                    homeAddress: addressData.getAttribute('data-homeAddress'),
                    landmark: addressData.getAttribute('data-landmark'),
                    city: addressData.getAttribute('data-city'),
                    state: addressData.getAttribute('data-state'),
                    zipCode: addressData.getAttribute('data-zipCode'),
                    country: addressData.getAttribute('data-country'),
                }
                : null;

            const billingDetails = {
                name: document.getElementById('name').value,
                phoneNumber: document.getElementById('phoneNumber').value,
                homeAddress: document.getElementById('houseAddress').value,
                landmark: document.getElementById('landmark').value,
                city: document.getElementById('city').value,
                state: document.getElementById('state').value,
                zipCode: document.getElementById('zipCode').value,
                country: document.getElementById('country').value,
            };

            const paymentMethod = document.querySelector('input[name="paymentMethod"]:checked')?.id;

            if (!deliveryAddress) {
                Swal.fire('Error!', 'Please select a delivery address.', 'error');
                return;
            }


            event.preventDefault();

            const homeAddress = document.getElementById('houseAddress').value.trim();
            const landmark = document.getElementById('landmark').value.trim();
            const name = document.getElementById('name').value.trim();
            const phoneNumber = document.getElementById('phoneNumber').value.trim();
            const city = document.getElementById('city').value.trim();
            const state = document.getElementById('state').value.trim();
            const zipCode = document.getElementById('zipCode').value.trim();
            const country = document.getElementById('country').value.trim();

            const errors = {
                houseAddressError: document.getElementById('houseAddressError'),
                landmarkError: document.getElementById('landmarkError'),
                nameError: document.getElementById('nameError'),
                phoneNumberError: document.getElementById('phoneNumberError'),
                cityError: document.getElementById('cityError'),
                stateError: document.getElementById('stateError'),
                zipCodeError: document.getElementById('zipCodeError'),
                countryError: document.getElementById('countryError'),
            };

            for (const key in errors) {
                errors[key].textContent = '';
            }

            let isValid = true;

            if (!homeAddress) {
                errors.houseAddressError.textContent = 'House address is required.';
                isValid = false;
            }
            if (!landmark) {
                errors.landmarkError.textContent = 'Landmark is required.';
                isValid = false;
            }
            if (!name) {
                errors.nameError.textContent = 'Name is required.';
                isValid = false;
            }
            if (!phoneNumber || !/^\d{10}$/.test(phoneNumber)) {
                errors.phoneNumberError.textContent = 'Enter a valid 10-digit phone number.';
                isValid = false;
            }
            if (!city) {
                errors.cityError.textContent = 'City is required.';
                isValid = false;
            }
            if (!state) {
                errors.stateError.textContent = 'State is required.';
                isValid = false;
            }
            if (!zipCode || !/^\d{6}$/.test(zipCode)) {
                errors.zipCodeError.textContent = 'Enter a valid 6-digit zip code.';
                isValid = false;
            }
            if (!country) {
                errors.countryError.textContent = 'Country is required.';
                isValid = false;
            }

            if (!isValid) return;

            const formData = {

                homeAddress,
                landmark,
                name,
                phoneNumber,
                city,
                state,
                zipCode,
                country,
            };
            if (!paymentMethod) {
                Swal.fire('Error!', 'Please select a payment method.', 'error');
                return;
            }
            const userCart = JSON.parse(document.getElementById('cartData').value);

            const discountAmount = document.getElementById("discountAmount").textContent;
            const totalAmount = document.getElementById("totalAmount").textContent;
            // alert(totalAmount)

            let deliveryChargeText = document.getElementById("deliveryCharge").textContent;
            let deliveryChargeValue = deliveryChargeText.replace("₹", "").trim();
            console.log(deliveryChargeValue);


            const orderData = {
                orderedItem: Object.values(userCart.items).map(item => ({
                    product: item.productId,
                    quantity: item.quantity,
                    price: item.price,
                })),
                totalPrice: userCart.totalPrice,
                discount: userCart.discount || 0,
                couponDiscount: discountAmount || 0,
                finalTotalAmount: (totalAmount || userCart.finalAmount) + deliveryChargeValue,
                deliveryAddress,
                billingDetails,
                paymentMethod,
                status: "pending",
                couponApplied: discountAmount !== "" ? true : false,
                deliveryChargeValue,
            };

            const totalPrice = parseFloat(totalAmount.replace(/[₹,]/g, '').trim()) || userCart.finalAmount;
            // alert(totalPrice)
            if (paymentMethod == "cod") {
                if (totalPrice > 10000) {
                    Swal.fire('Error!', 'Cash on delivery only allows purchases below 10,000 Rs.', 'error');
                    return;
                }
            }


            if (paymentMethod == "cod" || paymentMethod == "wallet") {
                placeOrder("");
            }

            if (paymentMethod === "upi") {

                fetch('/user/verify-payment', {
                    method: 'POST',
                    headers: { 'Content-Type': 'application/json' },
                    body: JSON.stringify(orderData)
                }).then(response => response.json())
                    .then(data => {
                        const options = {
                            key: 'rzp_test_teltatkxHwElFD',
                            amount: data.amount,
                            currency: 'INR',
                            name: 'Your Company Name',
                            description: 'Test Transaction',
                            order_id: data.orderId,
                            handler: function (response) {
                                console.log('Payment successful!');
                                console.log(response);
                                placeOrder(data.orderId);
                            },
                            prefill: {
                                name: 'John Doe',
                                email: 'john.doe@example.com',
                                contact: '9037608236',
                            },
                            theme: {
                                color: '#3399cc',
                            },
                        };

                        const rzp1 = new Razorpay(options);

                        rzp1.on('payment.failed', function (response) {
                            console.error('Payment failed:', response.error);
                            // alert("Payment failed")
                            // Redirect to another page on payment failure
                            window.location.href = '/user/payment-failed'; // Replace with your failure page URL
                        });
                        rzp1.open();

                    })
                    .catch(error => console.error('Error:', error));
            }

            function placeOrder(paymentId) {
                const paymentIds = paymentId != "" ? paymentId : null;
                orderData.paymentIds = paymentIds
                // console.log(orderData);
                fetch('/user/placeOrder', {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                    },
                    body: JSON.stringify(orderData),
                })
                    .then(response => response.json())
                    .then(data => {
                        if (data.message) {
                            Swal.fire('Success', data.message, 'success')
                                .then(() => {
                                    window.location.href = '/user';
                                });

                        } else {
                            Swal.fire('Error!', data.error, 'error');
                        }
                    })
                    .catch(error => {
                        console.error('Error placing order:', error);
                        Swal.fire('Error!', 'An error occurred. Please try again.', 'error');
                    });
            }
        });

    </script>
    <script>
        document.getElementById("applyCouponBtn").addEventListener("click", () => {
            const couponCode = document.getElementById("couponCode").value;
            const totalAmount = parseFloat(document.getElementById("totalAmount").textContent.replace(/[^\d.-]/g, ""));

            fetch("/user/applyCoupon", {
                method: "POST",
                headers: { "Content-Type": "application/json" },
                body: JSON.stringify({ couponCode, totalAmount }),
            })
                .then((response) => response.json())
                .then((data) => {
                    if (data.success) {
                        // alert("success", data.finalAmount)
                        document.getElementById("couponMessage").textContent = data.message;
                        document.getElementById("discountAmount").textContent = `₹${data.discount.toFixed(0)}`;
                        document.getElementById("totalAmount").textContent = `₹${data.finalAmount.toFixed(0)}`;
                        document.getElementById("removeCouponBtn").style.display = "block"
                        document.getElementById("applyCouponBtn").style.display = "none"
                        document.getElementById("couponMessageFalse").textContent = null

                    } else {
                        // alert("faild")
                        document.getElementById("couponMessage").textContent = null;
                        document.getElementById("couponMessageFalse").textContent = data.message;
                    }
                })
                .catch((error) => {
                    console.error("Error:", error);
                    alert("Server issue");
                });

        });

        function remove_coupon() {
            const couponCode = document.getElementById("couponCode").value;
            const totalAmount = parseFloat(document.getElementById("totalActualAmount").textContent.replace(/[^\d.-]/g, ""));

            fetch("/user/removeCoupon", {
                method: "POST",
                headers: { "Content-Type": "application/json" },
                body: JSON.stringify({ couponCode, totalAmount }),
            }).then((response) => response.json())
                .then((data) => {
                    if (data.success) {
                        document.getElementById("removeCouponBtn").style.display = "none"
                        document.getElementById("applyCouponBtn").style.display = "block"
                        document.getElementById("couponMessage").textContent = data.message;
                        document.getElementById("discountAmount").textContent = `-`;
                        document.getElementById("totalAmount").textContent = `₹${data.totalAmount.toFixed(0)}`;
                        document.getElementById("couponCode").value = null;
                        document.getElementById("couponMessageFalse").textContent = null

                    } else {
                        // alert("faild")
                        document.getElementById("couponMessage").textContent = null;
                        document.getElementById("couponMessageFalse").textContent = data.message;
                    }
                })
                .catch((error) => {
                    console.error("Error:", error);
                    alert("Server issue");
                });
        }

    </script>

</body>

</html>