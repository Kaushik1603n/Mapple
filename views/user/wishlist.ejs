<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>WishList</title>
    <!-- Bootstrap CSS -->
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0-alpha1/dist/css/bootstrap.min.css" rel="stylesheet">
    <link href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0-beta3/css/all.min.css" rel="stylesheet">
    <link href="https://cdn.jsdelivr.net/npm/sweetalert2@11.7.4/dist/sweetalert2.min.css" rel="stylesheet">

    <style>
        body {
            font-family: Arial, sans-serif;
            background-color: #f8f9fa;
        }

        .table-container {
            background-color: #ffffff;
            border-radius: 10px;
            padding: 20px;
            box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
        }

        h3 {
            font-weight: bold;
            color: #343a40;
        }

        .table th {
            background-color: #e9ecef;
            text-transform: uppercase;
            color: #495057;
            font-size: 14px;
        }

        .table tbody tr:hover {
            background-color: #f8f9fa;
            transition: background-color 0.3s ease;
        }

        .status-inprogress {
            color: #ff9800;
            font-weight: bold;
        }

        .status-canceled {
            color: #dc3545;
            font-weight: bold;
        }

        .status-delivered {
            color: #28a745;
            font-weight: bold;
        }

        .rate-product a {
            color: #007bff;
            text-decoration: none;
            font-weight: bold;
            font-size: 14px;
        }

        .rate-product a:hover {
            text-decoration: underline;
        }
    </style>
</head>

<body>
    <!-- Sidebar -->
    <%- include("../../views/partials/user/sidebar") %>

        <!-- Content -->
        <div class="content p-3">
            <div class="container my-4 mt-5">
                <div class="table-container bg-light shadow-lg">
                    <!-- Table Header -->
                    <h3 class="mb-4 text-center">Order History</h3>

                    <!-- Responsive Table -->
                    <div class="table-responsive">
                        <table class="table table-hover table-bordered text-center align-middle">
                            <thead class="table-light">
                                <tr>
                                    <th>Image</th>
                                    <th>Product Name</th>
                                    <th>Status</th>
                                    <th>Price</th>
                                    <th>Add to cart</th>
                                    <th>Action</th>
                                </tr>
                            </thead>
                            <% if(allProduct && allProduct.length>0) { %>
                                <% allProduct.forEach((product,index)=>{ %>
                                    <tbody>
                                        <tr>
                                            <td> <img src="<%= product.productImage[0] %>" alt="Product" class="me-2"
                                                    style="width: 50px;">
                                            <td>
                                                <%= product.productName %>
                                            </td>
                                            <td>
                                                <%= product.status %>
                                            </td>
                                            <td>
                                                <%= product.salePrice %>
                                            </td>
                                            <td>
                                                <button class="btn btn-primary btn-sm addToCartButton"
                                                    id="addToCartButton" data-product-id="<%= product._id %>">
                                                    Add to Cart
                                                </button>
                                            </td>
                                            <td>
                                                <button class="btn btn-danger btn-sm remove-btn"
                                                    data-id="<%= product._id %>">
                                                    <i class="fas fa-trash"></i>
                                                </button>
                                            </td>
                                        </tr>
                                    </tbody>
                                    <% }) %>
                                        <% } else { %>
                                            <p>No WishList item available.</p>
                                            <% } %>
                        </table>
                    </div>
                </div>
            </div>
        </div>

        <!-- Bootstrap Bundle with Popper -->
        <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0-alpha1/dist/js/bootstrap.bundle.min.js"></script>
        <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11.7.4/dist/sweetalert2.min.js"></script>
        <script>
            document.addEventListener("DOMContentLoaded", () => {
                const removeButtons = document.querySelectorAll(".remove-btn");

                removeButtons.forEach(button => {
                    button.addEventListener("click", async (event) => {
                        const productId = event.target.closest(".remove-btn").getAttribute("data-id");
                        // console.log(productId);

                        try {
                            const response = await fetch(`/user/removeproduct/${productId}`, {
                                method: "DELETE",
                                headers: {
                                    "Content-Type": "application/json",
                                },
                            });

                            if (response.ok) {
                                Swal.fire({
                                    icon: 'success',
                                    title: 'Product removed successfully!',
                                    showConfirmButton: false,
                                    timer: 1500,  // The popup will close after 1.5 seconds
                                }).then(() => {

                                    location.reload(); // Reload the page to update the product list                                location.reload(); // Reload the page to update the product list
                                })
                            } else {
                                Swal.fire({
                                    icon: 'error',
                                    title: 'Failed to remove product.',
                                    showConfirmButton: true,
                                });
                            }
                        } catch (error) {
                            console.error("Error removing product:", error);
                            Swal.fire({
                                icon: 'error',
                                title: 'Something went wrong!',
                                text: error.message,
                                showConfirmButton: true,
                            })
                        }
                    });
                });
            });

            document.addEventListener('DOMContentLoaded', () => {
                const addToCartButtons = document.querySelectorAll(".addToCartButton"); // Select all "Add to Cart" buttons
                const defaultQuantity = 1; // Default quantity value

                // Loop through each "Add to Cart" button
                addToCartButtons.forEach(button => {
                    button.addEventListener("click", async (event) => {
                        const productId = button.getAttribute('data-product-id'); // Get product ID from button
                        const quantity = parseInt(defaultQuantity, 10); // Use default quantity

                        // Validate inputs
                        if (!productId || quantity <= 0) {
                            Swal.fire({
                                title: 'Invalid Input!',
                                text: 'Invalid product or quantity.',
                                icon: 'warning',
                                confirmButtonText: 'OK'
                            });
                            return;
                        }

                        const cartData = {
                            productId: productId,
                            quantity: quantity,
                        };

                        try {
                            // Make POST request to add product to cart
                            const response = await fetch('/user/cart', {
                                method: 'POST',
                                headers: {
                                    'Content-Type': 'application/json',
                                },
                                body: JSON.stringify(cartData),
                            });

                            const data = await response.json();

                            if (response.ok && data.success) {
                                Swal.fire({
                                    title: 'Success!',
                                    text: 'Product added to cart successfully!',
                                    icon: 'success',
                                    confirmButtonText: 'OK'
                                });
                            } else {
                                Swal.fire({
                                    title: 'Error!',
                                    text: data.message || 'Failed to add product to cart.',
                                    icon: 'error',
                                    confirmButtonText: 'Try Again'
                                });
                            }
                        } catch (err) {
                            console.error('Error adding product to cart:', err);
                            Swal.fire({
                                title: 'Error!',
                                text: 'Something went wrong. Please try again.',
                                icon: 'error',
                                confirmButtonText: 'OK'
                            }).then(() => {
                                window.location.reload(); // Reload the page in case of error
                            });
                        }
                    });
                });
            });

        </script>

</body>

</html>